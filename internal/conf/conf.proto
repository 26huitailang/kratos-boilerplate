syntax = "proto3";
package kratos.api;

option go_package = "kratos-boilerplate/internal/conf;conf";

import "google/protobuf/duration.proto";

message Bootstrap {
  Server server = 1;
  Data data = 2;
  Auth auth = 3;
  Features features = 4;
}

message Server {
  message HTTP {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  message GRPC {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration timeout = 3;
  }
  HTTP http = 1;
  GRPC grpc = 2;
}

message Data {
  message Database {
    string driver = 1;
    string source = 2;
  }
  message Redis {
    string network = 1;
    string addr = 2;
    google.protobuf.Duration read_timeout = 3;
    google.protobuf.Duration write_timeout = 4;
  }
  Database database = 1;
  Redis redis = 2;
}

message Auth {
  string jwt_secret_key = 1;
  google.protobuf.Duration access_token_expiration = 2;
  google.protobuf.Duration refresh_token_expiration = 3;
  bool captcha_enabled = 4;
  google.protobuf.Duration captcha_expiration = 5;
  int32 max_login_attempts = 6;
  google.protobuf.Duration lock_duration = 7;
  bool totp_enabled = 8;
}

message Features {
  bool enabled = 1;
  string config_file = 2;
  string config_format = 3;
  bool watch_config = 4;
  string default_environment = 5;
  FeatureRepository repository = 6;
}

message FeatureRepository {
  string type = 1;  // "file", "redis", "database"
  string config_path = 2;
  string format = 3;  // "yaml", "json"
}
