name: CI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler postgresql-client redis-tools

      - name: Install protoc plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install github.com/go-kratos/kratos/cmd/protoc-gen-go-http/v2@latest
          go install github.com/google/gnostic/cmd/protoc-gen-openapi@latest

      - name: Get dependencies
        run: go mod tidy

      - name: Generate proto files
        run: make all

      - name: Wait for services
        run: |
          sleep 10
          until pg_isready -h localhost -p 5432 -U postgres; do
            echo "Waiting for postgres..."
            sleep 2
          done
          until redis-cli -h localhost -p 6379 ping; do
            echo "Waiting for redis..."
            sleep 2
          done
          echo "All services are ready!"

      - name: Set up test environment
        run: |
          cp test/config/test.yaml configs/config.yaml
          mkdir -p test/output

      - name: Run all tests with comprehensive framework
        run: |
          chmod +x ./test/scripts/run_all.sh
          ./test/scripts/run_all.sh --all
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db?sslmode=disable
          REDIS_URL: redis://localhost:6379

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports
          path: |
            test/output/
            coverage.out
            coverage.html
          retention-days: 30

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: success()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: false