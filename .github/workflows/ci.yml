name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Check out code
        uses: actions/checkout@v4

      - name: Install protoc
        run: |
          sudo apt-get update
          sudo apt-get install -y protobuf-compiler

      - name: Install protoc plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install github.com/go-kratos/kratos/cmd/protoc-gen-go-http/v2@latest
          go install github.com/google/gnostic/cmd/protoc-gen-openapi@latest

      - name: Get dependencies
        run: go mod tidy

      - name: Generate proto files
        run: make all

      - name: Run TDD tests with coverage (go test)
        run: |
          go test -coverprofile=coverage.out ./internal/...
          go tool cover -func=coverage.out | grep total:

      - name: Upload TDD coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.out

      - name: Generate HTML coverage report
        run: go tool cover -html=coverage.out -o coverage.html

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-html
          path: coverage.html

      # BDD测试不关注覆盖率，仅需业务流程通过
      - name: Install ginkgo CLI
        run: go install github.com/onsi/ginkgo/v2/ginkgo@latest

      - name: Run BDD tests (ginkgo)
        run: ginkgo -r ./internal/service

      # 如需上传覆盖率到Codecov，仅上传TDD部分
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage.out
          fail_ci_if_error: true 